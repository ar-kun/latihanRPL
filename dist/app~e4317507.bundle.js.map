{"version":3,"file":"app~e4317507.bundle.js","mappings":"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","sources":["webpack://restaurant-apps/./src/scripts/routes/routes.js","webpack://restaurant-apps/./src/scripts/routes/url-parser.js","webpack://restaurant-apps/./src/scripts/utils/drawer-initiator.js","webpack://restaurant-apps/./src/scripts/utils/like-button-initiator.js","webpack://restaurant-apps/./src/scripts/utils/sw-register.js","webpack://restaurant-apps/./src/scripts/utils/notification-helper.js","webpack://restaurant-apps/./src/scripts/utils/websocket-initiator.js"],"sourcesContent":["import List from '../views/pages/list-restaurant';\nimport Detail from '../views/pages/detail';\nimport Like from '../views/pages/like';\n\nconst routes = {\n  '/': List, // default page\n  '/list': List,\n  '/detail/:id': Detail,\n  '/like': Like,\n};\n\nexport default routes;\n","const UrlParser = {\n  parseActiveUrlWithCombiner() {\n    const url = window.location.hash.slice(1).toLowerCase();\n    const splitedUrl = this._urlSplitter(url);\n    return this._urlCombiner(splitedUrl);\n  },\n\n  parseActiveUrlWithoutCombiner() {\n    const url = window.location.hash.slice(1).toLowerCase();\n    return this._urlSplitter(url);\n  },\n\n  _urlSplitter(url) {\n    const urlsSplits = url.split('/');\n    return {\n      resource: urlsSplits[1] || null,\n      id: urlsSplits[2] || null,\n      verb: urlsSplits[3] || null,\n    };\n  },\n\n  _urlCombiner(splitedUrl) {\n    return (splitedUrl.resource ? `/${splitedUrl.resource}` : '/')\n      + (splitedUrl.id ? '/:id' : '')\n      + (splitedUrl.verb ? `/${splitedUrl.verb}` : '');\n  },\n};\n\nexport default UrlParser;\n","const DrawerInitiator = {\n  init({ menuToggle, drawer }) {\n    menuToggle.addEventListener('click', (event) => {\n      this._toggleDrawer(event, drawer);\n    });\n  },\n\n  _toggleDrawer(event, drawer) {\n    event.stopPropagation();\n    drawer.classList.toggle('slide');\n  },\n\n};\n\nexport default DrawerInitiator;\n","import FavoriteRestaurantIdb from '../data/favorite-restaurant-idb';\nimport { createLikeButtonTemplate, createLikedButtonTemplate } from '../views/templates/template-creator';\n\nconst LikeButtonInitiator = {\n  async init({ likeButtonContainer, restaurant }) {\n    this._likeButtonContainer = likeButtonContainer;\n    this._restaurant = restaurant;\n\n    await this._renderButton();\n  },\n\n  async _renderButton() {\n    const { id } = this._restaurant;\n\n    if (await this._isRestaurantExist(id)) {\n      this._renderLiked();\n    } else {\n      this._renderLike();\n    }\n  },\n\n  async _isRestaurantExist(id) {\n    const restaurant = await FavoriteRestaurantIdb.getRestaurant(id);\n    return !!restaurant;\n  },\n\n  _renderLike() {\n    this._likeButtonContainer.innerHTML = createLikeButtonTemplate();\n\n    const likeButton = document.querySelector('#likeButton');\n    likeButton.addEventListener('click', async () => {\n      await FavoriteRestaurantIdb.putRestaurant(this._restaurant);\n      this._renderButton();\n    });\n  },\n\n  _renderLiked() {\n    this._likeButtonContainer.innerHTML = createLikedButtonTemplate();\n\n    const likeButton = document.querySelector('#likeButton');\n    likeButton.addEventListener('click', async () => {\n      await FavoriteRestaurantIdb.deleteRestaurant(this._restaurant.id);\n      this._renderButton();\n    });\n  },\n};\n\nexport default LikeButtonInitiator;\n","import * as WorkboxWindow from 'workbox-window';\n\nconst swRegister = async () => {\n  if (!('serviceWorker' in navigator)) {\n    console.log('Service Worker not supported in the browser');\n    return;\n  }\n\n  const wb = new WorkboxWindow.Workbox('/sw.bundle.js');\n  try {\n    await wb.register();\n    console.log('Service worker registered');\n  } catch (error) {\n    console.log('Failed to register service worker', error);\n  }\n};\n\nexport default swRegister;\n","const NotificationHelper = {\n  sendNotification({ title, options }) {\n    if (!this._checkAvailability()) {\n      console.log('Notification not supported in this browser');\n      return;\n    }\n\n    if (!this._checkPermission()) {\n      console.log('User did not yet granted permission');\n      this._requestPermission();\n      return;\n    }\n\n    this._showNotification({ title, options });\n  },\n\n  _checkAvailability() {\n    return 'Notification' in window;\n  },\n\n  _checkPermission() {\n    return Notification.permission === 'granted';\n  },\n\n  async _requestPermission() {\n    const status = await Notification.requestPermission();\n\n    if (status === 'denied') {\n      console.log('Notification Denied');\n    }\n\n    if (status === 'default') {\n      console.log('Permission closed');\n    }\n  },\n\n  async _showNotification({ title, options }) {\n    const serviceWorkerRegistration = await navigator.serviceWorker.ready;\n    serviceWorkerRegistration.showNotification(title, options);\n  },\n};\n\nexport default NotificationHelper;\n","import NotificationHelper from './notification-helper';\nimport CONFIG from '../globals/config';\n\nconst WebSocketInitiator = {\n  init(url) {\n    const webSocket = new WebSocket(url);\n    webSocket.onmessage = this._onMessageHandler;\n  },\n\n  _onMessageHandler(message) {\n    const restaurant = JSON.parse(message.data);\n    NotificationHelper.sendNotification({\n      title: `${restaurant.title} is on cinema!`,\n      options: {\n        body: restaurant.description,\n        image: `${CONFIG.BASE_IMAGE_URL + restaurant.pictureId}`,\n      },\n    });\n  },\n};\n\nexport default WebSocketInitiator;\n"],"names":["List","Detail","Like","parseActiveUrlWithCombiner","url","window","location","hash","slice","toLowerCase","splitedUrl","this","_urlSplitter","_urlCombiner","parseActiveUrlWithoutCombiner","urlsSplits","split","resource","id","verb","init","menuToggle","drawer","addEventListener","event","_toggleDrawer","stopPropagation","classList","toggle","i","likeButtonContainer","restaurant","_likeButtonContainer","_restaurant","_renderButton","_isRestaurantExist","_renderLiked","_renderLike","FavoriteRestaurantIdb","innerHTML","createLikeButtonTemplate","document","querySelector","createLikedButtonTemplate","navigator","console","log","wb","WorkboxWindow","register","sendNotification","title","options","_checkAvailability","_checkPermission","_showNotification","_requestPermission","Notification","permission","requestPermission","status","serviceWorker","ready","showNotification","WebSocket","onmessage","_onMessageHandler","message","JSON","parse","data","NotificationHelper","body","description","image","CONFIG","pictureId"],"sourceRoot":""}